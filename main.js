!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-button",inactiveButtonClass:"modal__submit-button_disabled",inputErrorClass:"modal__input_error",errorClass:"modal__error-text_active"};var t=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._errorClass=e.errorClass,this._inputErrorClass=e.inputErrorClass,this._inactiveButtonClass=e.inactiveButtonClass,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}_toggleButtonState(){this._hasInvalidInput(this._inputList)?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_showInputError(e,t){const r=`.${e.id}-error`,n=this._formElement.querySelector(r);e.classList.add(this._inputErrorClass),n.textContent=t,n.classList.add(this._errorClass)}_hideInputError(e){const t=`.${e.id}-error`,r=this._formElement.querySelector(t);e.classList.remove(this._inputErrorClass),r.classList.remove(this._errorClass),r.textContent=""}resetValidation(){this._formElement.reset(),this._toggleButtonState()}};const r=document.querySelector("#profile-modal"),n=r.querySelector(".modal__submit-button"),o=document.querySelector("#new-post-modal"),s=o.querySelector(".modal__submit-button"),a=document.querySelector("#preview-modal"),i=a.querySelector(".modal__image-caption"),l=a.querySelector(".modal__image"),c=document.querySelector("#delete-post-modal"),d=c.querySelector(".modal__submit-button"),u=c.querySelector(".modal__submit-button_cancel"),_=document.querySelector("#avatar-modal"),m=_.querySelector(".modal__submit-button"),h=document.querySelector(".profile"),v=h.querySelector("#edit-profile"),p=h.querySelector(".profile__new-post"),f=h.querySelector(".profile__name"),y=h.querySelector(".profile__desc"),E=h.querySelector(".profile__avatar"),S=h.querySelector(".profile__avatar-overlay"),b=document.querySelector(".cards"),q=document.forms["edit-profile-form"],L=document.forms["new-post-form"],C=document.forms["avatar-form"],k=q.querySelector("#name"),g=q.querySelector("#description"),I=L.querySelector("#post-link"),w=L.querySelector("#post-caption"),x=C.querySelector("#avatar-link"),B=document.forms["delete-post-form"],D=document.querySelectorAll(".modal__close-button"),V=new t(e,q),A=new t(e,L),T=new t(e,C),$=new class{constructor(e){this._url=e.url,this._headers=e.headers}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_request(e,t){return fetch(`${this._url}/${e}`,t).then(this._checkResponse)}_getInitialCards(){return this._request("cards",{headers:this._headers})}_getUserInfo(){return this._request("users/me",{headers:this._headers})}loadInitialContent(){return Promise.all([this._getInitialCards(),this._getUserInfo()]).then((e=>{let[t,r]=e;return{cards:t,userData:r}}))}editUserInfo(e){let{name:t,about:r}=e;return this._request("users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})})}editAvatar(e){let{avatar:t}=e;return this._request("users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})})}addNewCard(e){let{name:t,link:r}=e;return this._request("cards",{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})})}removeCard(e){let{cardId:t}=e;return this._request(`cards/${t}`,{method:"DELETE",headers:this._headers})}toggleLike(e){let{isLiked:t,cardId:r}=e;return this._request(`cards/${r}/likes`,{method:t?"DELETE":"PUT",headers:this._headers})}}({url:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"13430c32-a8ca-4f0e-9fc3-4da36101b73c","Content-Type":"application/json"}});function N(e){e.classList.toggle("modal_opened"),e.classList.contains("modal_opened")?O():j()}function P(e){l.src=e.target.src,l.alt=e.target.alt,i.textContent=e.target.alt,N(a)}D.forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>N(t)))})),u.addEventListener("click",(()=>{N(c)})),v.addEventListener("click",(function(){k.value=f.textContent,g.value=y.textContent,k.dispatchEvent(new Event("input")),g.dispatchEvent(new Event("input")),N(r)})),p.addEventListener("click",(function(){N(o)})),S.addEventListener("click",(function(){N(_)})),q.addEventListener("submit",(function(e){e.preventDefault(),J(!0,n),$.editUserInfo({name:k.value,about:g.value}).then((e=>{f.textContent=e.name,y.textContent=e.about,N(r)})).catch((e=>{console.error(e)})).finally((()=>{J(!1,n)}))})),L.addEventListener("submit",(function(e){e.preventDefault(),J(!0,s);const t={link:I.value,name:w.value};$.addNewCard(t).then((e=>{const t=F(e);b.prepend(t),A.resetValidation(),N(o)})).catch((e=>{console.error(e)})).finally((()=>{J(!1,s)}))})),C.addEventListener("submit",(function(e){e.preventDefault(),J(!0,m),$.editAvatar({avatar:x.value}).then((e=>{E.src=e.avatar,E.alt=e.name,C.reset(),T.resetValidation(),N(_)})).catch((e=>{console.error(e)})).finally((()=>{J(!1,m)}))}));const U=e=>{"Escape"===e.key&&N(document.querySelector(".modal_opened"))},O=()=>{document.addEventListener("keydown",U)},j=()=>{document.removeEventListener("keydown",U)};function J(e,t){t.textContent=e?"Saving...":"Save"}function H(e,t){t.textContent=e?"Deleting...":"Delete"}function R(e){$.toggleLike({isLiked:e.target.classList.contains("card__like-button_liked"),cardId:e.target.closest(".card").id}).then((()=>{e.target.classList.toggle("card__like-button_liked")})).catch((e=>{console.error(e)}))}let z;function M(e){z=e.target.closest(".card"),N(c)}function F(e){const t=document.querySelector("#card-template").content.cloneNode(!0),r=t.querySelector(".card__image"),n=t.querySelector(".card__description"),o=t.querySelector(".card__like-button");return o.addEventListener("click",R),e.isLiked&&o.classList.add("card__like-button_liked"),t.querySelector(".card__delete-button").addEventListener("click",M),r.addEventListener("click",P),r.src=e.link,r.alt=e.name,r.closest(".card").id=e._id,n.textContent=e.name,t}document.querySelectorAll(".modal").forEach((e=>{e.addEventListener("click",(t=>{t.target===e&&N(e)}))})),B.addEventListener("submit",(function(e){e.preventDefault(),H(!0,d),$.removeCard({cardId:z.id}).then((()=>{z.remove(),N(c)})).catch((e=>{console.error(e)})).finally((()=>{H(!1,d)}))})),$.loadInitialContent().then((e=>{let{cards:t,userData:r}=e;t.forEach((e=>{const t=F(e);b.append(t)})),f.textContent=r.name,y.textContent=r.about,E.src=r.avatar})).catch((e=>{console.error(e)})),V.enableValidation(),A.enableValidation(),T.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,